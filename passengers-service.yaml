openapi: 3.0.3
info:
  title: Chatty car passengers service
  description: Chatty car passengers service
  version: 1.0.0
servers:
  - url: "http://localhost:9004"
    description: Development server
paths:
  /passengers/{trip_id}:
    get:
      summary: Get list of passengers of a trip, with pending, accepted and refused status
      security:
        - authentication:
            - driver
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 38
          description: ID of the trip
      responses:
        400:
          description: Status not in accepted values
        401:
          description: Missing authentication
        403:
          description: Not identified as the corresponding user
        404:
          description: No trip found with this ID
        200:
          description: Sent list of passengers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/passengers"

  /passengers/{trip_id}/{user_id}:
    parameters:
      - name: trip_id
        in: path
        required: true
        schema:
          type: integer
          example: 38
        description: ID of the trip
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
          example: 12
        description: ID of the user
    post:
      summary: Add user as passenger to a trip with pending status
      security:
        - authentication:
            - passenger
      responses:
        400:
          description: User is already a passenger, or the ride has no available seating left
        401:
          description: Missing authentication
        403:
          description: Not identified as the corresponding user
        404:
          description: Trip or user not found
        201:
          description: User added as pending passenger
    get:
      summary: Get passenger status
      security:
        - authentication:
            - driver
            - passenger
      responses:
        401:
          description: Missing authentication
        403:
          description: Not identified as the corresponding user
        404:
          description: Trip or user not found
        200:
          description: Sent passenger status
          content:
            "text/plain":
              schema:
                type: string
                enum:
                  - pending
                  - accepted
                  - refused

    put:
      summary: Update passenger status
      security:
        - authentication:
            - driver
      parameters:
        - name: status
          in: query
          required: true
          schema:
            type: string
            enum:
              - accepted
              - refused
          description: New status of the passenger
      responses:
        400:
          description: User is not a passenger, or is not in pending status, or status not in accepted value
        401:
          description: Missing authentication
        403:
          description: Not identified as the corresponding user
        404:
          description: Trip or user not found
        200:
          description: Status is updated

    delete:
      summary: Remove user from passengers of a trip
      security:
        - authentication:
            - passenger
      responses:
        400:
          description: User is not a passenger
        401:
          description: Missing authentication
        403:
          description: Not identified as the corresponding user
        404:
          description: Trip or user not found
        200:
          description: User removed from passenger

components:
  securitySchemes:
    authentication:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    passengers:
      type: object
      properties:
        pending:
          type: array
          items:
            $ref: "#/components/schemas/user"
        accepted:
          type: array
          items:
            $ref: "#/components/schemas/user"
        refused:
          type: array
          items:
            $ref: "#/components/schemas/user"

    user:
      type: object
      properties:
        id:
          type: integer
        email:
          type: string
        firstname:
          type: string
        lastname:
          type: string
      example:
        id: 1
        email: gregory.seront@vinci.be
        firstname: Gregory
        lastname: Seront
