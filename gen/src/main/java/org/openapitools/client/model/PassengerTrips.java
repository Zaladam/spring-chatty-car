/*
 * Prout Car Ride Sharing Service Gateway API
 * API for the gateway service of Chatty Car, the ride sharing app.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.Trip;

/**
 * PassengerTrips
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-11-07T11:39:11.793477753+01:00[Europe/Brussels]")
public class PassengerTrips {
  public static final String SERIALIZED_NAME_PENDING = "pending";
  @SerializedName(SERIALIZED_NAME_PENDING)
  private List<Trip> pending = null;

  public static final String SERIALIZED_NAME_ACCEPTED = "accepted";
  @SerializedName(SERIALIZED_NAME_ACCEPTED)
  private List<Trip> accepted = null;

  public static final String SERIALIZED_NAME_REFUSED = "refused";
  @SerializedName(SERIALIZED_NAME_REFUSED)
  private List<Trip> refused = null;


  public PassengerTrips pending(List<Trip> pending) {
    
    this.pending = pending;
    return this;
  }

  public PassengerTrips addPendingItem(Trip pendingItem) {
    if (this.pending == null) {
      this.pending = new ArrayList<Trip>();
    }
    this.pending.add(pendingItem);
    return this;
  }

   /**
   * Get pending
   * @return pending
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Trip> getPending() {
    return pending;
  }


  public void setPending(List<Trip> pending) {
    this.pending = pending;
  }


  public PassengerTrips accepted(List<Trip> accepted) {
    
    this.accepted = accepted;
    return this;
  }

  public PassengerTrips addAcceptedItem(Trip acceptedItem) {
    if (this.accepted == null) {
      this.accepted = new ArrayList<Trip>();
    }
    this.accepted.add(acceptedItem);
    return this;
  }

   /**
   * Get accepted
   * @return accepted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Trip> getAccepted() {
    return accepted;
  }


  public void setAccepted(List<Trip> accepted) {
    this.accepted = accepted;
  }


  public PassengerTrips refused(List<Trip> refused) {
    
    this.refused = refused;
    return this;
  }

  public PassengerTrips addRefusedItem(Trip refusedItem) {
    if (this.refused == null) {
      this.refused = new ArrayList<Trip>();
    }
    this.refused.add(refusedItem);
    return this;
  }

   /**
   * Get refused
   * @return refused
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Trip> getRefused() {
    return refused;
  }


  public void setRefused(List<Trip> refused) {
    this.refused = refused;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PassengerTrips passengerTrips = (PassengerTrips) o;
    return Objects.equals(this.pending, passengerTrips.pending) &&
        Objects.equals(this.accepted, passengerTrips.accepted) &&
        Objects.equals(this.refused, passengerTrips.refused);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pending, accepted, refused);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PassengerTrips {\n");
    sb.append("    pending: ").append(toIndentedString(pending)).append("\n");
    sb.append("    accepted: ").append(toIndentedString(accepted)).append("\n");
    sb.append("    refused: ").append(toIndentedString(refused)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

